input {
    http {
        port => 5044
    }
}

filter {
    json {
        source => "message"
        remove_field => ["severity", "host", "facility_label", "severity_label", "facility", "priority"]
    }
    if ![ip] or ![port] {
        drop { }
    }
    geoip {
        add_field => {
            "host" => "%{ip}:%{port}"
        }
        source => "ip"
        target => "geoip"
        fields => ["city_name", "country_name", "location"]
        database => '/usr/share/logstash/config/GeoLite2-City.mmdb'
        locale => 'zh-CN'
        remove_field => ["message"]
    }
    ip {
        source => 'ip'
        inner_ips => '${INNER_IP_LIST}'
        ip_num_name => 'ip_num'
        inner_name => 'inner'
    }
    if [protocol] in ['HTTP', 'HTTPS'] {
        url {
            source => "url"
            url_tpl_name => 'url_tpl'
            path_name => 'path'
            site_name => 'site'
        }
    }
}

output {
    if "_grokparsefailure" not in [tags] and "_jsonparsefailure" not in [tags] {
        elasticsearch {
            hosts => ["${ELASTICSEARCH_URL}"]
            index => "${ELASTICSEARCH_INDEX}-%{+YYYYMMdd}"
        }
    }
}